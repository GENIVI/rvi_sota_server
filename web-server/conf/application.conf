# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret="YM5B6o<ywKn4tTyA;tOZ<2xUEajF4DDi=O/PPm1Q^w2LqtKISd9oqYT6b>>C1gQa"
play.crypto.secret=${?PLAY_CRYPTO_SECRET}

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

play {
  server {
    #disable pidfile so the webserver plays nice with docker
    pidfile.path = "/dev/null"
  }
}

core.database {
  driver = "org.mariadb.jdbc.Driver"
  url = "jdbc:mariadb://localhost:3306/sota_core"
  url = ${?CORE_TEST_DB_URL}
  properties {
    user = "sota"
    user = ${?CORE_TEST_DB_USER}
    password = "s0ta"
    password = ${?CORE_TEST_DB_PASSWORD}
  }
  numThreads = 10
  connectionTimeout = 5000
  validationTimeout = 5000
}

packages {
  versionFormat = "^\d+\.\d+\.\d+$"
  versionFormat = ${?PACKAGES_VERSION_FORMAT}
}

resolver.database {
  driver = "org.mariadb.jdbc.Driver"
  url = "jdbc:mariadb://localhost:3306/sota_resolver"
  url = ${?RESOLVER_TEST_DB_URL}
  properties {
    user = "sota"
    user = ${?RESOLVER_TEST_DB_USER}
    password = "s0ta"
    password = ${?RESOLVER_TEST_DB_PASSWORD}
  }
  numThreads = 10
  connectionTimeout = 5000
  validationTimeout = 5000
}

# Remote APIs
core.api.uri = "http://localhost:8080"
core.api.uri = ${?CORE_API_URI}
resolver.api.uri = "http://localhost:8081"
resolver.api.uri = ${?RESOLVER_API_URI}

test.webserver.host  = "localhost"
test.webserver.host  = ${?DOCKER_IP}
#the default test port is already specified by scalatest
test.webserver.port  = 9000

file.password = "conf/accounts.json"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false
