# Default Config

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  actor {
    debug {
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
    }
  }

  stream {

    # Default flow materializer settings
    materializer {

      # Initial size of buffers used in stream elements
      initial-input-buffer-size = 16
      # Maximum size of buffers used in stream elements
      max-input-buffer-size = 64
   }
 }
}

server = {
  host = "localhost"
  host = ${?HOST}
  port = 8080
  port = ${?PORT}
}

resolver = {
  baseUri = "http://localhost:8081"
  baseUri = ${?RESOLVER_API_URI}
  packagesUri = ${resolver.baseUri}"/api/v1/packages"
  resolveUri = ${resolver.baseUri}"/api/v1/resolve"
  vehiclesUri = ${resolver.baseUri}"/api/v1/vehicles"
}

upload {
  //mediaTypes = ["application/x-rpm", "application/x-redhat-package-manager", "application/binary", "application/octet-stream"]
  store = "/tmp/"
}

packages = {
  versionFormat = "^\d+\.\d+\.\d+$"
  versionFormat = ${?PACKAGES_VERSION_FORMAT}
  absolutePath = "/usr/local/packages"
  absolutePath = ${?PACKAGES_PATH}
  extension = "rpm"
  extension = ${?PACKAGES_EXTENSION}
  checksumExtension = "sha1"
  checksumExtension = ${?PACKAGES_CHECKSUM_EXTENSION}
}

rvi {
  endpoint = "http://127.0.0.1:8801"
  endpoint = ${?RVI_URI}
  transfer {
    chunkSize = 64K
    ackTimeout = 30 s
    installTimeout = 60 s
  }
  sotaServicesUri = "http://"${server.host}":"${server.port}"/rvi"
  sotaServicesUri = ${?SOTA_SERVICES_URI}
}

database = {
  driver = "org.mariadb.jdbc.Driver"
  url = "jdbc:mariadb://localhost:3306/sota_core"
  url = ${?CORE_DB_URL}
  properties {
    user = "sota"
    user = ${?CORE_DB_USER}
    password = "s0ta"
    password = ${?CORE_DB_PASSWORD}
  }
  numThreads = 10
}

test-database = ${database}
test-database = {
  url = "jdbc:mariadb://localhost:3306/sota_core_test"
  url = ${?CORE_TEST_DB_URL}
}
